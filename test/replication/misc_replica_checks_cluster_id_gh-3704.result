test_run = require('test_run').new()
---
...
test_run:cmd("restart server default")
uuid = require('uuid')
---
...
fiber = require('fiber')
---
...
--
-- gh-3704 move cluster id check to replica
--
test_run:cmd("create server replica with rpl_master=default, script='replication/replica.lua'")
---
- true
...
box.schema.user.grant("guest", "replication")
---
...
test_run:cmd("start server replica")
---
- true
...
test_run:grep_log("replica", "REPLICASET_UUID_MISMATCH")
---
- null
...
box.info.replication[2].downstream.status
---
- follow
...
-- change master's cluster uuid and check that replica doesn't connect.
test_run:cmd("stop server replica")
---
- true
...
_ = box.space._schema:replace{'cluster', tostring(uuid.new())}
---
...
-- master believes replica is in cluster, but their cluster UUIDs differ.
test_run:cmd("start server replica")
---
- true
...
test_run:wait_log("replica", "REPLICASET_UUID_MISMATCH", nil, 1.0)
---
- REPLICASET_UUID_MISMATCH
...
test_run:wait_downstream(2, {status = 'stopped'})
---
- true
...
test_run:cmd("stop server replica")
---
- true
...
test_run:cmd("cleanup server replica")
---
- true
...
test_run:cmd("delete server replica")
---
- true
...
test_run:cleanup_cluster()
---
...
box.schema.user.revoke('guest', 'replication')
---
...
